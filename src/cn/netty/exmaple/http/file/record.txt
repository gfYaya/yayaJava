现在通过文件出个对比(file2,file2就是netty example中的) 可以确定 是handler下的channelRead0 方法出的问题
其他部分都是 自己写的 除了read0 是从netty官方demo拷贝出来的
目前file2中 server 和initializer是 和file相同的 handler部分 read0 是netty官网的,其他的和file 中的handler 一模一样
但是file 是不可运行的,依然无法下载文件,file2是可运行没问题的

2019.02.12
通过逐步判断 代码锁定bug 在这个位置
 //--------------------------------------------

        RandomAccessFile raf;
        try {
            raf = new RandomAccessFile(file, "r");
        } catch (FileNotFoundException ignore) {
            sendError(ctx, NOT_FOUND);
            return;
        }
        long fileLength = raf.length();

        HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);
        HttpUtil.setContentLength(response, fileLength);
        setContentTypeHeader(response, file);
        setDateAndCacheHeaders(response, file);
        if (HttpUtil.isKeepAlive(request)) {
            response.headers().set(HttpHeaderNames.CONNECTION, HttpHeaderValues.KEEP_ALIVE);
        }
        //write the initial line and the header
         ctx.write(response);
         System.out.println("2");
        //-------------------------------------
